
#### 异步编程的语法目标，就是让它看起来更像同步编程

#### 协程和线程的区别

- 线程通常是系统实现的（也有语言模拟的，如Python的线程），协程通常是库实现的（也有语言实现的，如Go）。
- 线程的控制权通常是系统控制的，是被动的，协程的控制权通常是调用方主动控制的（需要主动yield释放控制权，Python如此，Lua如此，此处也是），这一点很重要，导致普通的协程程序很难写。
- 由于线程是系统控制的，通常切换需要进入内核态进行处理，协程通常是在用户态就完成了切换，这一点也很重要。
- 协程切换是在一个线程内进行的
